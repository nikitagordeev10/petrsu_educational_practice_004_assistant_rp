temp/*
2_research/docxBot-master/token.txt
3_development/token.txt
3_development/1.py
2_research/buffer.py
3_development/dbpswd.py
3_development/temp/*
1_tz/1/план_практики_никита.doc
план_практики_никита_скан


# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
3_development/.env
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
3_development/.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/
.idea/

# the rest
.swp

*DS_store
/todo.txt
!/3_development/dbpswd.py

*.pyc
*.pyo
/build/
dist/
/docs/build/output/
*.orig
alembic.ini
.venv
/venv/
*.egg-info
.coverage
coverage.xml
.tox
*.patch
/scratch
/scratch_test_*
/test_schema.db
/test.cfg
.idea/
.vscode/
.pytest_cache/
/docs/build/_build/
/pysqlite_test_schema.db
*.sqlite3	


*.pyc
*.pyd
*.pyo
*.egg
/build/
/dist/
/doc/build/output/
/doc/build/_build/
/dogpile_data/
*.orig
*,cover
/.tox
/venv/
.venv
*.egg-info
.coverage
coverage.xml
.*,cover
*.class
*.so
*.patch
sqlnet.log
/shard?_*.db
/test.cfg
/.cache/
/.mypy_cache
*.sw[o,p]
*.rej
test/test_schema.db
*test_schema.db
.idea
/Pipfile*
/.pytest_cache/
/pip-wheel-metadata/
/.vscode/
/.ipynb_checkpoints/
*.ipynb
/querytest.db
/.pytest_cache
/db_idents.txt
.DS_Store
.vs
/scratch

# cython complied files
/lib/**/*.c
/lib/**/*.cpp
# cython annotated output
/lib/**/*.html

MANIFEST
*~
*.userprefs
*.pidb
*.pyc
*.sw[po]
*.egg-info/
dist/*
/build
env
env?
.idea
.tox
.vscode/
/rel
/wheels
/packages
/wheelhouse